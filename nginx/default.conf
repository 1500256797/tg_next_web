# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

# docker-compose中web服务要命名为tg_next
upstream tg_next {
  server tg_next:3000;
}

server {
    listen 80;
    listen 443 ssl;
    #对应的域名，把baofeidyz.com改成你们自己的域名就可以了
    server_name tgbots.club;
    #从腾讯云获取到的第一个文件的全路径
    ssl_certificate /etc/nginx_bundle_9173987293fc.crt;
    #从腾讯云获取到的第二个文件的全路径
    ssl_certificate_key /etc/tgbots.club_key.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;

    server_tokens off;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    # BUILT ASSETS (E.G. JS BUNDLES)
    # Browser cache - max cache headers from Next.js as build id in url
    # Server cache - valid forever (cleared after cache "inactive" period)
    location /_next/static {
        proxy_cache STATIC;
        proxy_pass http://tg_next;
    }

    # STATIC ASSETS (E.G. IMAGES)
    # Browser cache - "no-cache" headers from Next.js as no build id in url
    # Server cache - refresh regularly in case of changes
    location /static {
        proxy_cache STATIC;
        proxy_ignore_headers Cache-Control;
        proxy_cache_valid 60m;
        proxy_pass http://tg_next;
    }

    # DYNAMIC ASSETS - NO CACHE
    location / {
        proxy_pass http://tg_next;
    }
}